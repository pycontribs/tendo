---
name: tox

on:
  create: # is used for publishing to PyPI and TestPyPI
    tags: # any tag regardless of its name, no branches
      - "**"
  push: # only publishes pushes to the main branch to TestPyPI
    branches: # any integration branch but not tag
      - "main"
  pull_request:
  release:
    types:
      - published # It seems that you can publish directly without creating
  schedule:
    - cron: 1 0 * * * # Run daily at 0:01 UTC
  # Run every Friday at 18:02 UTC
  # https://crontab.guru/#2_18_*_*_5
  # - cron: 2 18 * * 5

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 1 # tox, pytest, ansible-lint
  PY_COLORS: 1
  TOX_PARALLEL_NO_SPINNER: 1

jobs:
  linters:
    name: >-
      ${{ matrix.env.TOXENV }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.9
        os:
          - ubuntu-22.04
        env:
          - TOXENV: lint
          - TOXENV: docs
          - TOXENV: packaging

    steps:
      - name: Check out src from Git
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed by setuptools-scm
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --upgrade tox
      - name: Log installed dists
        run: python -m pip freeze --all
      - name: Initialize tox envs
        run: python -m tox --parallel auto --parallel-live --notest --skip-missing-interpreters false -vv
        env: ${{ matrix.env }}
      - name: Test with tox
        run: python -m tox --parallel auto --parallel-live
        env: ${{ matrix.env }}
      - name: Archive logs
        uses: actions/upload-artifact@v3
        with:
          name: logs.zip
          path: .tox/**/log/

  unit:
    name: ${{ matrix.name || matrix.tox_env }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell || 'bash'}}
    strategy:
      fail-fast: false
      # max-parallel: 5
      # The matrix testing goal is to cover the *most likely* environments
      # which are expected to be used by users in production. Avoid adding a
      # combination unless there are good reasons to test it, like having
      # proof that we failed to catch a bug by not running it. Using
      # distribution should be preferred instead of custom builds.
      matrix:
        name:
          - py38
        tox_env:
          - py38
        python-version:
          - 3.8
        os:
          # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
          - ubuntu-22.04
        # - windows-latest
        # - windows-2016
        include:
          # keep list sorted as it determines UI order too
          # linux
          # py38 is first and comes from matrix
          - tox_env: py38
            os: ubuntu-22.04
            python-version: 3.8
          - tox_env: py39
            os: ubuntu-22.04
            python-version: 3.9
          - tox_env: py310
            os: ubuntu-22.04
            python-version: "3.10"
          - tox_env: py311
            os: ubuntu-22.04
            python-version: "~3.11.0-0" # see https://github.com/actions/setup-python/issues/213#issuecomment-1146676713
          # macos
          - name: py38 (macos)
            tox_env: py38
            os: macOS-latest
            python-version: 3.8
          - name: py310 (macos)
            tox_env: py310
            os: macOS-latest
            python-version: "3.10"
    env:
      # vars safe to be passed to wsl:
      PYTEST_REQPASS: 0

    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed by setuptools-scm

      - name: Set up Python ${{ matrix.python-version }}
        if: "!contains(matrix.shell, 'wsl')"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install tox
        run: |
          python3 -m pip install --upgrade tox
      - name: Log installed dists
        run: >-
          python3 -m pip freeze --all
      - name: Initialize tox envs
        run: >-
          python3 -m
          tox
          --parallel auto
          --parallel-live
          --notest
          --skip-missing-interpreters false
          -vv
        env:
          TOXENV: ${{ matrix.tox_env }}
      - name: "Test with tox: ${{ matrix.tox_env }}"
        run: python3 -m tox
        env:
          TOXENV: ${{ matrix.tox_env }}
      - name: Combine coverage data
        # produce a single .coverage file at repo root
        run: tox -e coverage
      - name: Upload coverage data
        if: "runner.os == 'Linux'"
        uses: codecov/codecov-action@v3
        with:
          name: ${{ matrix.tox_env }}
          fail_ci_if_error: false # see https://github.com/codecov/codecov-action/issues/598
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true # optional (default = false)
      - name: Archive logs
        uses: actions/upload-artifact@v3
        with:
          name: logs.zip
          path: .tox/**/log/
        # https://github.com/actions/upload-artifact/issues/123
        continue-on-error: true
      - name: Report junit failures
        # cspell:disable-next-line
        uses: shyim/junit-report-annotations-action@3d2e5374f2b13e70f6f3209a21adfdbc42c466ae
        with:
          path: .tox/junit.*.xml
        if: always()

  check: # This job does nothing and is only used for the branch protection
    if: always()
    permissions:
      pull-requests: write # allow codenotify to comment on pull-request

    needs:
      - linters
      - unit

    runs-on: ubuntu-latest

    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

      - name: Check out src from Git
        uses: actions/checkout@v3

      - name: Notify repository owners about lint change affecting them
        uses: sourcegraph/codenotify@v0.6.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # https://github.com/sourcegraph/codenotify/issues/19
        continue-on-error: true
